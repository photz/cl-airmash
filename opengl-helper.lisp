(in-package :opengl-helper)

(defun link-program (shader-source fragment-source)
  (let ((vs (gl:create-shader :vertex-shader))
	(fs (gl:create-shader :fragment-shader))
	(pg (gl:create-program)))
    (gl:shader-source vs shader-source)
    (gl:compile-shader vs)
    ;;(print (gl:get-shader-info-log vs))
    (gl:shader-source fs fragment-source)
    (gl:compile-shader fs)
    ;;(print (gl:get-shader-info-log fs))
    (gl:attach-shader pg vs)
    (gl:attach-shader pg fs)
    (gl:link-program pg)
    ;;(print (gl:get-program-info-log pg))
    pg))

(defun load-buffer-array (array)
  (let* ((len (length array))
	 (arr (gl:alloc-gl-array :float len)))
    (dotimes (i len)
      (setf (gl:glaref arr i) (aref array i)))
    (gl:buffer-data :array-buffer :static-draw arr)
    (gl:free-gl-array arr)))
 
(defun enable-vertex-array (index buffer)
  (gl:enable-vertex-attrib-array index)
  (gl:bind-buffer :array-buffer buffer)
  (gl:vertex-attrib-pointer index 3 :float nil 0 (cffi:null-pointer)))


(in-package :airmash-client)


(defbinary player ()
  (id 0 :type (unsigned-byte 16))
  (status 0 :type (unsigned-byte 8))
  (level 0 :type (unsigned-byte 8))
  (name "" :type (counted-string 1 :external-format :utf8))
  (ship-type 0 :type (unsigned-byte 8))
  (team 0 :type (unsigned-byte 16))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (rotation 0 :type (unsigned-byte 16))
  (flag 0 :type (unsigned-byte 16))
  (upgrades 0 :type (unsigned-byte 8)))


(defbinary server-login-msg ()
  (success 0 :type (unsigned-byte 8))
  (id 0 :type (unsigned-byte 16))
  (team 0 :type (unsigned-byte 16))
  (clock 0 :type (unsigned-byte 32))
  (token "" :type (counted-string 1 :external-format :utf8))
  (type 0 :type (unsigned-byte 8))
  (room "" :type (counted-string 1 :external-format :utf8))
  (players nil :type (counted-array 2 player)))

(defbinary server-backup-msg ())

(defbinary server-ping-msg ()
  (clock 0 :type (unsigned-byte 32))
  (num 0 :type (unsigned-byte 32)))

(defbinary server-ping-result-msg ()
  (ping 0 :type (unsigned-byte 16))
  (playerstotal 0 :type (unsigned-byte 32))
  (playersgame 0 :type (unsigned-byte 32)))

(defbinary server-ack-msg ())

(defbinary server-error-msg ()
  (err 0 :type (unsigned-byte 8)))

(defbinary server-command-reply-msg ())

(defbinary server-player-new-msg ()
  (id 0 :type (unsigned-byte 16))
  (status 0 :type (unsigned-byte 8))
  (name "" :type (counted-string 1 :external-format :utf8))
  (type 0 :type (unsigned-byte 8))
  (team 0 :type (unsigned-byte 16))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (rot 0 :type (unsigned-byte 16))
  (flag 0 :type (unsigned-byte 16))
  (upgrades 0 :type (unsigned-byte 8)))

(defbinary server-player-leave-msg ()
  (id 0 :type (unsigned-byte 16)))

(defbinary server-player-update-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (keystate 0 :type (unsigned-byte 8))
  (upgrades 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 24))
  (pos-y 0 :type (unsigned-byte 24))
  (rotation 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16)))

(defbinary player-fire-projectile ()
  (id 0 :type (unsigned-byte 16))
  (missile-type 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (accel-x 0 :type (unsigned-byte 16))
  (accel-y 0 :type (unsigned-byte 16))
  (max-speed 0 :type (unsigned-byte 16)))

(defbinary server-player-fire-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (energy 0 :type (unsigned-byte 8))
  (energy-regen 0 :type (unsigned-byte 16))
  (projectiles 0 :type (counted-array 1 player-fire-projectile)))

(defbinary server-player-hit-item ()
  (id 0 :type (unsigned-byte 16))
  (health 0 :type (unsigned-byte 8))
  (health-regen 0 :type (unsigned-byte 8)))

(defbinary server-player-hit-msg ()
  (id 0 :type (unsigned-byte 8))
  (type 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (owner 0 :type (unsigned-byte 16))
  (players nil :type (counted-array 1 server-player-hit-item)))

(defbinary server-player-respawn-msg ())

(defbinary server-player-kill-msg ()
  (id 0 :type (unsigned-byte 16))
  (killer 0 :type (unsigned-byte 16))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16)))

(defbinary server-mob-despawn-coords-msg ()
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16)))

(defbinary server-chat-public-msg ()
  (id 0 :type (unsigned-byte 16))
  (text "" :type (counted-string 1 :external-format :utf8)))

(defbinary server-chat-say-msg ()
  (id 0 :type (unsigned-byte 16))
  (text "" :type (counted-string 1 :external-format :utf8)))

(defbinary server-score-update-msg ()
  (id 0 :type (unsigned-byte 16))
  (score 0 :type (unsigned-byte 32))
  (earnings 0 :type (unsigned-byte 32))
  (upgrades 0 :type (unsigned-byte 16))
  (totalkills 0 :type (unsigned-byte 32))
  (totaldeaths 0 :type (unsigned-byte 32)))

(defbinary server-player-upgrade-msg ()
  (upgrades 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8))
  (speed 0 :type (unsigned-byte 8))
  (defense 0 :type (unsigned-byte 8))
  (energy 0 :type (unsigned-byte 8))
  (missile 0 :type (unsigned-byte 8)))

(defbinary server-player-type ()
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8)))

(defbinary server-player-powerup-msg ()
  (type 0 :type (unsigned-byte 8))
  (duration 0 :type (unsigned-byte 32)))

(defbinary server-player-level-msg ()
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8))
  (level 0 :type (unsigned-byte 8)))

(defbinary score-board-entry ()
  (id 0 :type (unsigned-byte 16))
  (score 0 :type (unsigned-byte 32))
  (level 0 :type (unsigned-byte 8)))

(defbinary server-score-board-msg ()
  (data 0 :type (counted-array 2 score-board-entry)))

(defbinary server-mob-update-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (accel-x 0 :type (unsigned-byte 16))
  (accel-y 0 :type (unsigned-byte 16))
  (max-speed 0 :type (unsigned-byte 16)))


(defbinary server-mob-update-stationary-msg ()
  (id 0 :type (unsigned-byte 16))
  (mob-type 0 :type (unsigned-byte 8))
  (pos-x 0.0 :type (single-float))
  (pos-y 0.0 :type (single-float)))

(defbinary server-mob-despawn-msg ()
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8)))


(defbinary server-event-stealth-msg ()
  (id 0 :type (unsigned-byte 16))
  (state 0 :type (unsigned-byte 8))
  (energy 0 :type (unsigned-byte 16))
  (energy-regen 0 :type (unsigned-byte 8)))

(defbinary server-event-leavehorizon-msg ()
  (type 0 :type (unsigned-byte 8))
  (id 0 :type (unsigned-byte 16)))

(defbinary server-event-repel-msg-player ()
  (id 0 :type (unsigned-byte 16))
  (keystate 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (rot 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (energy 0 :type (unsigned-byte 8))
  (energy-regen 0 :type (unsigned-byte 16))
  (player-health 0 :type (unsigned-byte 8))
  (player-health-regen 0 :type (unsigned-byte 16)))

(defbinary server-event-repel-msg-mob ()
  (id 0 :type (unsigned-byte 16))
  (type 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (accel-x 0 :type (unsigned-byte 16))
  (accel-y 0 :type (unsigned-byte 16))
  (max-speed 0 :type (unsigned-byte 16)))

(defbinary server-event-repel-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (rot 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (energy 0 :type (unsigned-byte 8))
  (energy-regen 0 :type (unsigned-byte 16))
  (players nil :type (counted-array 1 server-event-repel-msg-player))
  (mobs nil :type (counted-array 1 server-event-repel-msg-mob)))

(defbinary server-event-boost-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (boost 0 :type (unsigned-byte 8))
  (pos-x 0 :type (unsigned-byte 24))
  (pos-y 0 :type (unsigned-byte 24))
  (rot 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16))
  (energy 0 :type (unsigned-byte 16))
  (energy-regen 0 :type (unsigned-byte 8)))

(defbinary server-event-bounce-msg ()
  (clock 0 :type (unsigned-byte 32))
  (id 0 :type (unsigned-byte 16))
  (keystate 0 :type (unsigned-byte 16))
  (pos-x 0 :type (unsigned-byte 16))
  (pos-y 0 :type (unsigned-byte 16))
  (rotation 0 :type (unsigned-byte 16))
  (speed-x 0 :type (unsigned-byte 16))
  (speed-y 0 :type (unsigned-byte 16)))


(defbinary server-msg ()
  (command 0 :type (unsigned-byte 8))
  (body nil :type (eval (case command
                          ((0) '(server-login-msg))
                          ((1) '(server-backup-msg))
                          ((5) '(server-ping-msg))
                          ((6) '(server-ping-result-msg))
                          ((7) '(server-ack-msg))
                          ((8) '(server-error-msg))
                          ((9) '(server-command-reply-msg))
                          ((10) '(server-player-new-msg))
                          ((11) '(server-player-leave-msg))
                          ((12) '(server-player-update-msg))
                          ((13) '(server-player-fire-msg))
                          ((14) '(server-player-hit-msg))
                          ((15) '(server-player-respawn-msg))
                          ((16) '(server-placeholder-msg))
                          ((17) '(server-player-kill-msg))
                          ((18) '(server-player-upgrade-msg))
                          ((19) '(server-player-type))
                          ((20) '(server-player-powerup-msg))
                          ((21) '(server-player-level-msg))
                          ((30) '(server-placeholder-msg))
                          ((31) '(server-placeholder-msg))
                          ((32) '(server-placeholder-msg))
                          ((33) '(server-placeholder-msg))
                          ((40) '(server-event-repel-msg))
                          ((41) '(server-event-boost-msg))
                          ((42) '(server-event-bounce-msg))
                          ((43) '(server-event-stealth-msg))
                          ((44) '(server-event-leavehorizon-msg))
                          ((60) '(server-mob-update-msg))
                          ((61) '(server-mob-update-stationary-msg))
                          ((62) '(server-mob-despawn-msg))
                          ((63) '(server-mob-despawn-coords-msg))
                          ((70) '(server-chat-public-msg))
                          ((71) '(server-placeholder-msg))
                          ((72) '(server-chat-say-msg))
                          ((73) '(server-placeholder-msg))
                          ((78) '(server-placeholder-msg))
                          ((79) '(server-placeholder-msg))
                          ((80) '(server-score-update-msg))
                          ((81) '(server-score-board-msg))
                          ((82) '(server-placeholder-msg))
                          ((83) '(server-placeholder-msg))
                          ((84) '(server-placeholder-msg))
                          ((90) '(server-placeholder-msg))
                          ((91) '(server-placeholder-msg))))))
